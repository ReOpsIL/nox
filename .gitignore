# Rust
/target/
**/*.rs.bk
*.pdb

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock (uncomment if this is a library)

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Nox-specific files
.nox-registry/
*.nox

# Environment variables
.env
.env.local
.env.development
.env.test
.env.production

# IDEs and editors
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Logs
logs/
*.log

# Claude CLI credentials and sessions
.claude/
claude-sessions/
*.claude-session

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# MCP Services data
mcp-data/
mcp-volumes/

# Agent conversation logs (potentially sensitive)
conversations/
agent-logs/
*.conversation

# Configuration files with secrets
config.json
nox.config.json
secrets.json
.secrets

# Backup files
*.backup
*.bak
backup/
backups/

# Temporary files
temp-test*
tmp/
temp/
*.tmp
*.temp
test-cli/

# Database files
*.db
*.sqlite
*.sqlite3

# API keys and tokens
.anthropic
.openai
*.key
*.token
api_keys.txt

# Local development
local/
dev/
debug/
test-data/

# Coverage reports
tarpaulin-report.html
lcov.info
coverage/

# Documentation build
book/
docs/_build/
site/

# Node.js (if you have any JS/TS tooling)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if you have any Python scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Archives
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
